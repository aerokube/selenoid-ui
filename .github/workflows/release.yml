name: release

on:
  release:
    types: [published]

jobs:
  selenoid-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Golang
        uses: actions/setup-go@v4
        with:
          go-version: ~1.22.2

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/setup-node@v3
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Test
        run: ci/test.sh

      - name: Build
        run: ci/build.sh

      - name: Prepare release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      - uses: AButler/upload-release-assets@v2.0
        with:
          files: 'dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: ci/docker-push.sh $RELEASE_VERSION

      - name: Latest release image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: ci/docker-push.sh latest-release

      - name: Release docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ci/docs.sh $RELEASE_VERSION ${{ secrets.GITHUB_TOKEN }}
