name: test

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install generator
        run: go get -u github.com/rakyll/statik

      - name: Generate mocked bundle
        run: statik -src=./ui/public

      - name: Test
        run: go test -race -v -coverprofile=coverage.txt -covermode=atomic ./...

      - uses: codecov/codecov-action@v1
        with:
          flags: go

  ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install
        working-directory: ui
        run: yarn install

      - name: build
        working-directory: ui
        run: yarn build

      - name: test
        working-directory: ui
        run: yarn test

      - uses: codecov/codecov-action@v1
        with:
          file: ./ui/coverage/coverage-final.json
          flags: ui
